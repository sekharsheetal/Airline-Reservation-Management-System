/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirlines;

import business.Airlines;
import business.Airplane;
import business.Flight;
import business.TravelAgency;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sheetal Sekhar
 */
public class ManageFlightWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightWorkAreaJPanel
     */
    private Flight flight;
    private Airplane airplane;
    private TravelAgency travelAgency;
    private Airlines airlines1;
    private JPanel userProcessContainer;
    public ManageFlightWorkAreaJPanel(JPanel userProcessContainer, Airlines airlines1, TravelAgency travelAgency) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.airlines1=airlines1;
        this.travelAgency=travelAgency;
        this.flight = flight;
        populateTable();
        
    }

        public void populateTable(){
            //System.out.println("hi"+travelAgency.getAirlineDirectory().getAirlinesList().size());
        DefaultTableModel dtm = (DefaultTableModel)tblViewFlights.getModel();
        dtm.setRowCount(0);
        
        String name = airlines1.getName();
        if(travelAgency.numberOfFlights(name) == 0){
            
         for( Airplane airplane : airlines1.getAirplaneFleet().getAirplaneFleet())
        {
           
            Object row[] = new Object[6];
            row[0] = airplane;
            dtm.addRow(row);
        
        }
        }
         else {
                 
                 
        for( Airplane airplane : airlines1.getAirplaneFleet().getAirplaneFleet())
        {
            for(Flight flight : airplane.getFlight()){
                
            
            Object row[] = new Object[6];
            row[1] = flight;
            row[2] = flight.getDestination();
            row[3] = flight.getSource();
            row[4] = flight.getDepartureTime();
            row[5] = flight.getPrice();
            row[0] = airplane;
            dtm.addRow(row);
        }
                 }          
        }    
        
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCreateNewFlights = new javax.swing.JButton();
        btnViewFlights = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        scrollPaneViewFlights = new javax.swing.JScrollPane();
        tblViewFlights = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Manage Flights");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        btnCreateNewFlights.setText("Create New Flights");
        btnCreateNewFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewFlightsActionPerformed(evt);
            }
        });
        add(btnCreateNewFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, 40));

        btnViewFlights.setText("View Flights");
        btnViewFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightsActionPerformed(evt);
            }
        });
        add(btnViewFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 140, 40));

        btnBack.setText("<<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        tblViewFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Serial Number", "Flight ID", "Source", "Destination", "Departure Time", "Base Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPaneViewFlights.setViewportView(tblViewFlights);
        if (tblViewFlights.getColumnModel().getColumnCount() > 0) {
            tblViewFlights.getColumnModel().getColumn(0).setResizable(false);
            tblViewFlights.getColumnModel().getColumn(1).setResizable(false);
            tblViewFlights.getColumnModel().getColumn(2).setResizable(false);
            tblViewFlights.getColumnModel().getColumn(3).setResizable(false);
            tblViewFlights.getColumnModel().getColumn(4).setResizable(false);
            tblViewFlights.getColumnModel().getColumn(5).setResizable(false);
        }

        add(scrollPaneViewFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 890, 130));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, 140, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightsActionPerformed
        // TODO add your handling code here:
        
       int selectedrow = tblViewFlights.getSelectedRow();
        
        if(selectedrow <0)
        {
            JOptionPane.showMessageDialog(null, "Please select a Row from table first to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
        else {
        if(tblViewFlights.getValueAt(selectedrow, 1) == null ){
            
            JOptionPane.showMessageDialog(null, "Please add flights to the airplane");
        }
        
        else{
            
        
        flight = (Flight) tblViewFlights.getValueAt(selectedrow, 1);
        ViewFlightsJPanel panel = new ViewFlightsJPanel(userProcessContainer,flight,airlines1);
        userProcessContainer.add("ViewFlightsJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        }
    }//GEN-LAST:event_btnViewFlightsActionPerformed

    private void btnCreateNewFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewFlightsActionPerformed
        // TODO add your handling code here:
        
               int selectedrow = tblViewFlights.getSelectedRow();
        
        if(selectedrow <0)
        {
            JOptionPane.showMessageDialog(null, "Please select a Row from table first to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
        else {
            
        
        airplane = (Airplane) tblViewFlights.getValueAt(selectedrow, 0);
        CreateNewFlightJPanel panel = new CreateNewFlightJPanel(userProcessContainer,airplane,travelAgency);
        userProcessContainer.add("CreateNewFlightJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnCreateNewFlightsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
       userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageAirlinersWorkAreaJPanel manageAirlinersWorkAreaJPanel = (ManageAirlinersWorkAreaJPanel) component;
        manageAirlinersWorkAreaJPanel.populateTable2();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedrow = tblViewFlights.getSelectedRow();
        if(tblViewFlights.getValueAt(selectedrow, 1)== null){
            
            JOptionPane.showMessageDialog(null, "Please add flights to the airplane");
        }
        else{
        if(selectedrow >=0)
        {
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the details","Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                
                Flight flight = (Flight) tblViewFlights.getValueAt(selectedrow, 1);
                for(Airlines airlines : travelAgency.getAirlineDirectory().getAirlinesList()){
                    for(Airplane airplane : airlines.getAirplaneFleet().getAirplaneFleet()){
                        
                        airplane.deleteFlight(flight);
                    }
                        
                }
                travelAgency.getMs().getFs().deleteFlight(flight);
                populateTable();
                
            }
        }
        else {
            
            JOptionPane.showMessageDialog(null, "Please select a Row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
    
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateNewFlights;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewFlights;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane scrollPaneViewFlights;
    private javax.swing.JTable tblViewFlights;
    // End of variables declaration//GEN-END:variables
}
